// <auto-generated />
using System;
using Experian.CreditCards.Repo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Experian.CreditCards.Migrations
{
    [DbContext(typeof(CreditCardContext))]
    [Migration("20220513142610_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AssessedApplicantCard", b =>
                {
                    b.Property<int>("AssessedApplicantsId")
                        .HasColumnType("int");

                    b.Property<int>("AvailableCardsId")
                        .HasColumnType("int");

                    b.HasKey("AssessedApplicantsId", "AvailableCardsId");

                    b.HasIndex("AvailableCardsId");

                    b.ToTable("AssessedApplicantCard");
                });

            modelBuilder.Entity("Experian.CreditCards.Models.Applicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Income")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("Experian.CreditCards.Models.AssessedApplicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("DecisioningMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("AssesssedApplicants");
                });

            modelBuilder.Entity("Experian.CreditCards.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Apr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Promo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apr = 10m,
                            Name = "Barclaycard",
                            Promo = "Super Barclaycard promo",
                            RuleName = "Barclaycard"
                        },
                        new
                        {
                            Id = 2,
                            Apr = 20m,
                            Name = "Vanquis",
                            Promo = "Ace Vanquis promo",
                            RuleName = "Vanquis"
                        });
                });

            modelBuilder.Entity("AssessedApplicantCard", b =>
                {
                    b.HasOne("Experian.CreditCards.Models.AssessedApplicant", null)
                        .WithMany()
                        .HasForeignKey("AssessedApplicantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Experian.CreditCards.Models.Card", null)
                        .WithMany()
                        .HasForeignKey("AvailableCardsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Experian.CreditCards.Models.AssessedApplicant", b =>
                {
                    b.HasOne("Experian.CreditCards.Models.Applicant", "Applicant")
                        .WithMany()
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });
#pragma warning restore 612, 618
        }
    }
}
